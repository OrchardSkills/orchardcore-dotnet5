@using OrchardCore.Contents
@using OrchardCore.ContentManagement
@inject IAuthorizationService AuthorizationService
@{
    ContentItem contentItem = Model.ContentItem;
}

<div class="row">
    <div class="col-xl-6 col-sm-12 title">
        @if (Model.Selectors != null)
        {
            <div class="selectors d-inline cursor-pointer">
                @await DisplayAsync(Model.Selectors)
            </div>
        }
        <div class="custom-control custom-checkbox d-inline">
            <input type="checkbox" class="custom-control-input" value="@contentItem.Id" name="itemIds" id="itemIds-@contentItem.Id">
            <label class="custom-control-label" for="itemIds-@contentItem.Id"></label>
        </div>
        @if (await AuthorizationService.AuthorizeAsync(User, CommonPermissions.EditContent, contentItem))
        {
            <div class="d-inline">
                <a admin-for="@contentItem" asp-route-returnUrl="@FullRequestPath" /> - <small class="text-muted">@contentItem.ContentType</small>
            </div>
        }
        else
        {
            <div class="d-inline">
                @contentItem - <small class="text-muted">@contentItem.ContentType</small>
            </div>
        }
        @if (Model.Tags != null)
        {
            <div class="d-inline">
                @await DisplayAsync(Model.Tags)
            </div>
        }
        @if (Model.Header != null)
        {
            <div class="header">@await DisplayAsync(Model.Header)</div>
        }

        @if (Model.Meta != null)
        {
            <div class="metadata">@await DisplayAsync(Model.Meta)</div>
        }
    </div>

    <div class="col-xl-6 col-sm-12 related">
        <div class="float-right">
            @if (Model.Actions != null)
            {
                @await DisplayAsync(Model.Actions)
            }
            @if (Model.ActionsMenu != null)
            {
                <div class="btn-group">
                    <button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @T["Actions"]
                    </button>
                    <div class="actions-menu dropdown-menu dropdown-menu-right">
                        @await DisplayAsync(Model.ActionsMenu)
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@if (Model.Content != null)
{
    <div class="col primary">@await DisplayAsync(Model.Content)</div>
}
