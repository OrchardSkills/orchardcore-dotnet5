@model ContentDeploymentStepViewModel
@inject OrchardCore.ContentManagement.Metadata.IContentDefinitionManager ContentDefinitionManager

@{
    var contentTypes = (string[])Model.ContentTypes;
}

<h5>@T["Content Types"]</h5>
<span class="hint">@T["The content types to add as part of the plan."]</span>

<div class="form-group">
    <div class="custom-control custom-checkbox">
        <input type="checkbox" class="custom-control-input" asp-for="ExportAsSetupRecipe" />
        <label class="custom-control-label" asp-for="ExportAsSetupRecipe">@T["Export As Setup recipe"]</label>
        <span class="hint">@T["Check if the data should be exported as a Setup recipe."]</span>
    </div>
    <div class="alert alert-warning">@T["If checked, you will have to manually declare variables for the Content Picker fields, Taxonomy fields, Tags fields and List item ids and replace them where needed in the recipe. Any reference to these content items will be lost."]</div>
</div>

<div class="form-group w-md-50">
    <ul class="list-group">
        @foreach (var contentTypeDefinition in ContentDefinitionManager.ListTypeDefinitions().OrderBy(i => i.Name))
        {
            var name = contentTypeDefinition.Name;
            var checkd = contentTypes?.Contains(name);

            <li class="list-group-item">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="@(Html.IdFor(m => m.ContentTypes) + "_" + contentTypeDefinition.Name)" name="@Html.NameFor(m => m.ContentTypes)" value="@name" checked="@checkd">
                    <label class="custom-control-label" for="@(Html.IdFor(m => m.ContentTypes) + "_" + contentTypeDefinition.Name)">@contentTypeDefinition.DisplayName</label>
                </div>
            </li>
        }
    </ul>
</div>
