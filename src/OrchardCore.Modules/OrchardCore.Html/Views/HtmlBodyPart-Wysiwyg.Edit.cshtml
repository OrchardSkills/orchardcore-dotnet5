@model HtmlBodyPartViewModel

@{
    var settings = Model.TypePartDefinition.GetSettings<HtmlBodyPartSettings>();
    var culture = await Orchard.GetContentCultureAsync(Model.ContentItem) ?? CultureInfo.CurrentUICulture;
}

<style asp-name="trumbowyg" version="2"></style>
<script asp-src="~/OrchardCore.Html/Scripts/trumbowyg.media.tag.min.js" debug-src="~/OrchardCore.Html/Scripts/trumbowyg.media.tag.js" depends-on="trumbowyg" at="Foot"></script>
<script asp-name="trumbowyg-shortcodes" at="Foot"></script>

@await DisplayAsync(await New.ShortcodeModal())

<div class="form-group">
    <label asp-for="Html">@Model.TypePartDefinition.DisplayName()</label>
    @if (culture.IsRightToLeft())
    {
        <div style="text-align:right">
            <textarea asp-for="Html" rows="5" class="form-control"></textarea>
        </div>
    }
    else
    {
        <textarea asp-for="Html" rows="5" class="form-control"></textarea>
    }
    <span class="hint">@T["The body of the content item."]</span>
</div>


<script at="Foot">
    $(function () {
        @* set dir while keeping trumbowg translations dictionary intact *@
        @if (culture.GetLanguageDirection() == LanguageDirection.RTL)
        {
            <text>        
            var langs = jQuery.trumbowyg.langs.@culture.TwoLetterISOLanguageName;
            langs['_dir'] = '@culture.GetLanguageDirection()';
            </text>
        }

        @* Extend trumbowyg default buttons. Only use for the wysiwyg editor which gets all buttons by default *@
        var defaultButtons = jQuery.trumbowyg.defaultOptions.btns;
        if (defaultButtons[6] !== "insertShortcode") {
            defaultButtons.splice(6, 0, "insertShortcode");
        }
                
        var settings = { 
            lang: '@culture.TwoLetterISOLanguageName'
        }

        $('#@Html.IdFor(m => m.Html)').trumbowyg(settings).on('tbwchange', function () {
            $(document).trigger('contentpreview:render');
        });
    });
</script>
