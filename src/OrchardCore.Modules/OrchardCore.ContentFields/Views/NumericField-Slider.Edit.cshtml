@model OrchardCore.ContentFields.ViewModels.EditNumericFieldViewModel
@using System.Globalization

@{
    var settings = Model.PartFieldDefinition.GetSettings<NumericFieldSettings>();
    string name = Model.PartFieldDefinition.DisplayName();
    string step = Math.Pow(10, 0 - settings.Scale).ToString(CultureInfo.InvariantCulture);
    decimal min = settings.Minimum.HasValue ? settings.Minimum.Value : 0;
    decimal max = settings.Maximum.HasValue ? settings.Maximum.Value : 10000;
    string id = Html.IdFor(m => m.Value);
    string javascriptDecimalSeparator = CultureInfo.InvariantCulture.NumberFormat.NumberDecimalSeparator;
    string serverDecimalSeparator = CultureInfo.CurrentUICulture.NumberFormat.NumberDecimalSeparator;
}

<script asp-name="bootstrap-slider" at="Foot" version="11"></script>
<style asp-name="bootstrap-slider" version="11"></style>

<div class="form-group">
    <div class="row">
        <div class="col-md-6 col-lg-4">
            <label asp-for="Value">@name</label>
            <div class="input-group mb-2">
                @if (settings.Minimum.HasValue)
                {
                    <div class="input-group-prepend">
                        <div class="input-group-text">@min</div>
                    </div>
                }
                <input asp-for="Value" class="form-control content-preview-select" placeholder="@settings.Placeholder" required="@settings.Required" />
                @if (settings.Maximum.HasValue)
                {
                    <div class="input-group-append">
                        <div class="input-group-text">@max</div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="input-group mb-2">            
        @if (settings.Minimum.HasValue)
        {
            <span class="ml-1 mr-3">@min</span>
        }
        <input id="@(id)-slider" type="text" data-slider-min="@min" data-slider-max="@max" data-slider-step="@step" data-slider-value="@Model.Value" />            
        @if (settings.Maximum.HasValue)
        {
            <span class="ml-3 mr-1">@max</span>
        }
    </div>
    @if (!String.IsNullOrEmpty(settings.Hint))
    {
        <span class="hint">@settings.Hint</span>
    }
</div>

<script at="Foot">

    $('#@(id)-slider').bootstrapSlider({ tooltip: 'show' }).on('change', function (ev) {
        let value = ev.value.newValue.toString();
        @if (javascriptDecimalSeparator != serverDecimalSeparator)
        {
            <text>value = value.replace('@(javascriptDecimalSeparator)', '@(serverDecimalSeparator)');</text>
        }
        $('#@(id)').val(value);
    });

    $('#@(id)').change(function () {
        let value = this.value;
        @if (javascriptDecimalSeparator != serverDecimalSeparator)
        {
            <text>value = value.replace('@(serverDecimalSeparator)', '@(javascriptDecimalSeparator)');</text>
        }
        value = (Number(value) || 0);
        $('#@(id)-slider').bootstrapSlider('setValue', value);
    });

</script>
